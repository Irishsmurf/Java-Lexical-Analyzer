/* Generated By:JavaCC: Do not edit this line. SimpleLAnalyzerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimpleLAnalyzerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHILE = 6;
  /** RegularExpression Id. */
  int AND = 7;
  /** RegularExpression Id. */
  int OR = 8;
  /** RegularExpression Id. */
  int BOOL = 9;
  /** RegularExpression Id. */
  int CONST = 10;
  /** RegularExpression Id. */
  int DO = 11;
  /** RegularExpression Id. */
  int FALSE = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int VAR = 15;
  /** RegularExpression Id. */
  int MAIN = 16;
  /** RegularExpression Id. */
  int NOT = 17;
  /** RegularExpression Id. */
  int ELSE = 18;
  /** RegularExpression Id. */
  int REAL = 19;
  /** RegularExpression Id. */
  int RET = 20;
  /** RegularExpression Id. */
  int STRING = 21;
  /** RegularExpression Id. */
  int THEN = 22;
  /** RegularExpression Id. */
  int VOID = 23;
  /** RegularExpression Id. */
  int NUM = 24;
  /** RegularExpression Id. */
  int RNUM = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;
  /** RegularExpression Id. */
  int LETTER = 27;
  /** RegularExpression Id. */
  int ID = 28;
  /** RegularExpression Id. */
  int STR = 29;
  /** RegularExpression Id. */
  int PLUS = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int MUL = 32;
  /** RegularExpression Id. */
  int DIV = 33;
  /** RegularExpression Id. */
  int MOD = 34;
  /** RegularExpression Id. */
  int EQ = 35;
  /** RegularExpression Id. */
  int NOEQ = 36;
  /** RegularExpression Id. */
  int LESS = 37;
  /** RegularExpression Id. */
  int MOR = 38;
  /** RegularExpression Id. */
  int LEQ = 39;
  /** RegularExpression Id. */
  int MEQ = 40;
  /** RegularExpression Id. */
  int LBR = 41;
  /** RegularExpression Id. */
  int RBR = 42;
  /** RegularExpression Id. */
  int LBCK = 43;
  /** RegularExpression Id. */
  int RBCK = 44;
  /** RegularExpression Id. */
  int COM = 45;
  /** RegularExpression Id. */
  int SEMC = 46;
  /** RegularExpression Id. */
  int COL = 47;
  /** RegularExpression Id. */
  int PRD = 48;
  /** RegularExpression Id. */
  int ASSIGN = 49;
  /** RegularExpression Id. */
  int CONIF = 50;
  /** RegularExpression Id. */
  int NO = 51;
  /** RegularExpression Id. */
  int OTHER = 52;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"while\"",
    "\"and\"",
    "\"or\"",
    "\"boolean\"",
    "\"constant\"",
    "\"do\"",
    "\"false\"",
    "\"if\"",
    "\"integer\"",
    "\"var\"",
    "\"main\"",
    "\"not\"",
    "\"else\"",
    "\"real\"",
    "\"return\"",
    "\"string\"",
    "\"then\"",
    "\"void\"",
    "<NUM>",
    "<RNUM>",
    "<DIGIT>",
    "<LETTER>",
    "<ID>",
    "<STR>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\".\"",
    "\":=\"",
    "\"?\"",
    "\"!\"",
    "<OTHER>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 56>",
  };

}
